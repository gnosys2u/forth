
requires Noun
requires Verbs
requires Location
requires LocationCondition
requires Messages

// this abstract class is needed to break a cyclic dependancy between Data and DataParser

class: IData
  m: init ;m  // takes ptrTo byte filename
  m: showIt ;m
  
  // Could return any of the subclasses of Word as well
  m: findWord returns Word ;m    // takes OString word
    
  m: getObjectByNumber returns Noun ;m  // takes int n
  m: getLocationByNumber returns Location ;m  // takes int n
  m: getActionVerbByNumber returns ActionVerb ;m  // takes int n
  m: getMotionVerbByNumber returns MotionVerb ;m  // takes int n
  m: getMessageByNumber returns Message ;m  // takes int n
  m: getByNumber returns Noun ;m  // takes int n
    
  m: getLocationCondition returns LocationCondition ;m  // takes ILocation from, ILocation to);
    
  // For debugging purposes
  m: dumpAllLocations   ;m
  m: dumpAllWords   ;m
  m: dumpAllMessages   ;m
  m: dumpAllMagicMessages   ;m
  m: dumpAllClassMessages   ;m
  m: dumpAllHints   ;m

  m: loadData ;m // takes ptrTo byte filename

  OArray locations
  OArray locationConditions
  OArray words
  OArray messages
  OArray magicMessages
  OArray classMessages
  OArray hints
;class
