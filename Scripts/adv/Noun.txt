
requires Word

class: Noun extends Word

  int propertyValue
  String inventoryMessage
  Array descriptions
    
  int treasure
  int movable
  // For Light object
  bool lightable
  bool lit
  
  new:
    _allocObject ->o Word newObj
    kAWTNoun -> newObj.wordType
    newObj
  ;

  m: init  // int number
    super.init
    new String -> inventoryMessage
    new Array -> descriptions
    //"init Noun " %s number %d %bl wordType %d %nl
  ;m
  
  m: initWith    // int number, string word
    super.initWith  // consumes number, word
    new String -> inventoryMessage
    new Array -> descriptions
    
    true -> movable
    false -> lightable
    false -> lit
    //"initWith Noun " %s words.getRaw(0) %s %bl number %d %bl wordType %d %nl
  ;m

  m: delete
    oclear inventoryMessage
    oclear descriptions
  ;m
  
  m: getPropertyDescriptions returns String
    mko String s
    do(descriptions.count 0)
      s.appendFormatted("\n\t%d: %s" i descriptions.get(i) <String>.get)
    loop
    unref s
  ;m
  
  m: getCurrentPropertyDescription  // returns ptrTo byte
  
    if(descriptions.count propertyValue >)
      descriptions.get(propertyValue)
      <String>.get
    else
      ">?<"
    endif
  ;m
  
  m: addPropertyDescription  // (const string desc)
    descriptions.push
  ;m
  
  m: appendToPropertyDescription  // (const int n, const string desc)
    ->o String desc
    -> int n
    if(descriptions.count  n 1+ >=)
      descriptions.get(n) <String>.append(desc.get)
    endif
  ;m

;class  

loaddone
