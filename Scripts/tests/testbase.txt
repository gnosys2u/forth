autoforget testbase
: testbase ;

false -> int testFailed
false -> int beNoisy

String testBuff
String testBuff2
StringOutStream testOut
Array testStreamStack

: setupTestBase
  new String -> testBuff
  new String -> testBuff2
  new StringOutStream -> testOut
  new Array -> testStreamStack
;

: cleanupTestBase
  oclear testBuff  oclear testBuff2
  oclear testOut
  oclear testStreamStack
;

: clearBuff testBuff.clear ;
: addBuff testBuff.append ;

: outToTestBuffer
  -> String stringBuff
  stringBuff.clear
  testOut.setString( stringBuff )
  setConsoleOut( testOut )
  oclear stringBuff
;

: startTest outToTestBuffer( testBuff ) ;

: checkResult
  -> ptrTo byte expected
  outToScreen
  if( strcmp( testBuff.get expected ) )
    "Expected |" %s expected %s "| got |" %s testBuff.get %s "|" %s %nl
    false
    true -> testFailed
  else
    if( beNoisy )
      expected %s " passed\n" %s
	endif
    true
  endif
;

// test[ LINE_OF_STUFF ]
// LINE_OF_STUFF must evaluate to one or more true (-1) values
: test[
  sp -> ptrTo int oldSP
  ']' $word -> string( 250 ) ops
  //ops %s %nl
  ops $evaluate
  sp oldSP swap - cell/ -> int numItems
  false -> int failed
  do( numItems 0 )
    if( not( pick( i ) ) )
      true -> failed
    endif
  loop
  if( failed )
    "FAILED: { " %s ops %s " } => " %s
    do( numItems 0 )
      i %d "=" %s pick( numItems 1- i - ) . %bl %nl
    loop
    true -> testFailed
  else
    if( beNoisy )
      ops %s " passed\n" %s
	endif
  endif
  
  do( numItems 0 )
    drop
  loop
;

// FILENAME N_VALUES N ...
: makeShortFile
  mko ByteArray buffer
  mko FileOutStream outFile
  buffer.load
  -> ptrTo byte outFileName
  
  if( outFile.open(outFileName "wb") )
    outFile.putBytes(buffer.base buffer.count)
    outFile.close
  else
    addErrorText(outFileName)
    error("makeShortFile: failed to open ")
  endif
  
  oclear outFile
  oclear buffer
;

// FILENAME FILE_CONTENTS ...
: makeFileFromString
  mko FileOutStream outFile
  -> ptrTo byte contents
  -> ptrTo byte outFileName
  
  if(outFile.open(outFileName "wb"))
    outFile.putBytes(contents strlen(contents))
    outFile.close
  else
    addErrorText(outFileName)
    error("makeFileFromString: failed to open ")
  endif
  oclear outFile
;


loaddone
