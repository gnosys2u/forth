#####################################################################################
# you will need to install nasm (the netwide assembler) if you don't already have it with:
# sudo apt-get install nasm

# you may need to install readline with this command:
# sudo apt-get install libreadline6-dev libreadline6

#.PHONY:	all clean depends

OBJ = obj
MAINSRC = .
LIBSRC = ../ForthLib


CC = g++
ASM = /usr/bin/nasm
CDEBUG = -g

DEFINES = -DLINUX -DFORTH64 -DINCLUDE_TRACE

# add '-save-temps=obj' to see intermediate assembly files
CFLAGS = -c $(CDEBUG) $(DEFINES) $(WARNING_FLAGS) -std=c++17 -m64 -fno-stack-protector

WARNING_FLAGS = -Wall -Wno-format -Wno-reorder -Wno-unused-variable -Wno-sign-compare -Wno-conversion-null -Wno-pointer-arith
CPPFLAGS = $(CFLAGS) -I $(LIBSRC)

ASMFLAGS = -d LINUX -felf64 -i $(LIBSRC)

LDFLAGS = $(CFLAGS) -no-pie
LD_LIBRARIES = -L $(OBJ) -lforth -lm -lc -lstdc++ -ldl -lpthread -lreadline

SRCS = \
	Shell.cpp \
	Engine.cpp \
	OuterInterpreter.cpp \
	ForthInner.cpp \
	Input.cpp \
	Vocabulary.cpp \
	BuiltinClasses.cpp \
	Extension.cpp \
	ShowContext.cpp \
	StructVocabulary.cpp \
	StructCodeGenerator.cpp \
	ForthOps.cpp \
	Server.cpp \
	Client.cpp \
	OpcodeCompiler.cpp \
	BlockFileManager.cpp \
	ParseInfo.cpp \
	Pipe.cpp \
	Forgettable.cpp \
	Thread.cpp \
	ObjectReader.cpp \
	MemoryManager.cpp \
	kbhit.cpp \
	OArray.cpp \
	ODeque.cpp \
	OList.cpp \
	OMap.cpp \
	ONumber.cpp \
	OSocket.cpp \
	OStream.cpp \
	OString.cpp \
	OSystem.cpp \
	ClassVocabulary.cpp \
	LocalVocabulary.cpp \
	DLLVocabulary.cpp \
	NativeType.cpp \
	TypesManager.cpp \
	VocabularyStack.cpp
	
	
	
ASMSRCS = AsmCore64.asm

ASMOBJS := $(patsubst %.asm,$(OBJ)/%.o,$(ASMSRCS))
OBJS := $(patsubst %.cpp,$(OBJ)/%.o,$(SRCS)) $(ASMOBJS)
# XDEFS is used to pass in defines from the make command line
LIBS := -lm -lstdc++ -ldl -lpthread -no-pie

$(OBJ)/libforth.a:	$(OBJS)
	mkdir -p $(OBJ)
	ar rcs $(OBJ)/libforth.a $(OBJS)
	
stuff:
	echo "DEPS=" $(DEPS)
	echo "OBJS=" $(OBJS)
	echo "SRCS=" $(SRCS)

$(OBJ)/%.o: $(LIBSRC)/%.cpp
	$(CC) $(CFLAGS) -o $(OBJ)/$*.o $(LIBSRC)/$*.cpp
    
$(OBJ)/%.o: $(LIBSRC)/%.asm
	$(ASM) $(ASMFLAGS) -o $(OBJ)/$*.o $(LIBSRC)/$*.asm

$(OBJ)/ForthMain.o:	$(MAINSRC)/ForthMain.cpp
	mkdir -p $(OBJ)
	$(CC) $(CPPFLAGS) -o $(OBJ)/ForthMain.o $(MAINSRC)/ForthMain.cpp

forth_noasm:	$(OBJ)/ForthMain.o $(OBJ)/libforth.a
	mkdir -p $(OBJ)
	$(CC) $(OBJ)/ForthMain.o $(DEFINES) -o forth_noasm -I $(LIBSRC) $(LD_LIBRARIES) -no-pie
	cp forth_noasm Sandbox

logger: $(MAINSRC)/ForthLogger.cpp
	$(CC) $(MAINSRC)/ForthLogger.cpp -o logger

clean:
	-rm $(OBJ)/*.o
	-rm $(OBJ)/libforth.a
	-rm ./forth
    
all:	forth

