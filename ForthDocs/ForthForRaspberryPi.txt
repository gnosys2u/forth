=============================================================================
Forth for Raspberry Pi

- get windows version working with _ASM_INNER_INTERPRETER undefined
  -> this required removing InnerInterp.asm, but this includes the CallDLL routine
? get linux version working under cygwin
=============================================================================
gdb

b FUNC			set breakpoint
d NUM			delete breakpoint NUM
r				run
s				step into
n				step over
q				quit

si				step asm instruction

layout asm		show disassembly window
layout src		show source window
layout regs		show registers window
layout prev		switch to previous layout command
info reg		show registers
source PATH		load gdb script from PATH
=============================================================================
make gcc create assembler files: (second mixes the C in with the asm)
gcc -O2 -S -c foo.c
gcc -c -g -Wa,-a,-ad [other GCC options] foo.c > foo.lst
=============================================================================
kbhit for linux

#include <stdio.h>
#include <termios.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/time.h>
 
void changemode(int);
int  kbhit(void);
int main(void)
{
  int ch;
  changemode(1);
  while ( !kbhit() )
  {
    putchar('.');
  }
 
  ch = getchar();
 
  printf("\nGot %c\n", ch);
 
  changemode(0);
  return 0;
}
 
void changemode(int dir)
{
  static struct termios oldt, newt;
 
  if ( dir == 1 )
  {
    tcgetattr( STDIN_FILENO, &oldt);
    newt = oldt;
    newt.c_lflag &= ~( ICANON | ECHO );
    tcsetattr( STDIN_FILENO, TCSANOW, &newt);
  }
  else
    tcsetattr( STDIN_FILENO, TCSANOW, &oldt);
}
 
int kbhit (void)
{
  struct timeval tv;
  fd_set rdfs;
 
  tv.tv_sec = 0;
  tv.tv_usec = 0;
 
  FD_ZERO(&rdfs);
  FD_SET (STDIN_FILENO, &rdfs);
 
  select(STDIN_FILENO+1, &rdfs, NULL, NULL, &tv);
  return FD_ISSET(STDIN_FILENO, &rdfs);
 
}
