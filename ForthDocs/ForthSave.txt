         1         2         3         4         5         6         7
1234567890123456789012345678901234567890123456789012345678901234567890123456789
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

This file contains info about:

o How to save the state of the forth system to avoid having to recompile
  everything every time

? Would it be okay to have restoration of saved state only work if you could
  reload the dictionary and other memory blocks at the same virtual address
  they were saved at?
  
-|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|-
File format idea:
File is a series of chunks, one per forgettable.
Each chunk has:
  typename as counted string
  name as counted string
  numBytes as long
  dataSection - byte array of length numBytes

The dataSection for each forgettable is interpreted by the class specified
by typename.

Forgettable types:
  vocabularies
  dictionary memory section
  opcode dispatch table
  
Opcode dispatch table should have:
  numStartOpcodes (for error checking)
  numUserOpcodes
  dataSection - long array with numUserOpcodes elements, as offsets from original DP
  
Dictionary section should have:
  dataSection
    
Vocabularies should have at least:
  numStartSymbols - number of symbols defined before any user definitions (for error checking)
  startSize - size of vocabulary before any user definitions (for error checking)
  numUserSymbols
  userSize
  
-|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|-
What would it take to save "compiled" forth?

o a chunk file format where chunks have names and types
o an extensible coldstart mechanism
? an extensible warmstart mechanism
o a way for re-establishing pointers at coldstart time

Damn! Using builds/does words for hooking up to external DLL support is
currently done by getting the DLL procedure addresses as the API words are
being compiled - this completely breaks savability.

-|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|=|-
Stuff that needs to be persistent:

o forth kernel version
o user defined op dispatch table
o vocabularies
  o symbol table
  o symbol count
  o search chain
  o static chain
o forgettables
  o static chain
o coldstart table
o warmstart table
o struct manager

It seems that most of the save state is in classes derived from ForthForgettable.
Maybe support for saving and restoring could be in ForthForgettable.

TBDs:
? Is there any thread state that needs to be saved?



ForthEngine
ForthShell
	ForthServerShell
ForthThread
ForthExtension
ForthForgettable
	ForthVocabulary
		ForthLocalVocabulary
		ForthDLLVocabulary
		ForthStructVocabulary
			ForthClassVocabulary
	ForthTypesManager
ForthPipe
ForthInputStream
	ForthFileInputStream
	ForthConsoleInputStream
	ForthBufferInputStream
	ForthServerInputStream
ForthInputStack
ForthParseInfo
ForthShellStack
ForthVocabularyStack
ForthInterface
ForthNativeType
ForthThreadQueue

