// help definitions for builtin ops
addHelp abort	abort		terminate execution with fatal error
addHelp drop	VAL drop	drop top element of param stack
addHelp _doDoes			INTERNAL
addHelp lit			pushes longword which is compiled immediately after it
addHelp flit			INTERNAL - pushes float which is compiled immediately after it
addHelp dlit			pushes double which is compiled immediately after it
addHelp _doVariable
addHelp _doConstant
addHelp _doDConstant
addHelp _endBuilds
addHelp done			makes inner interpreter return - used by outer interpreter
addHelp _doByte
addHelp _doShort
addHelp _doInt
addHelp _doFloat
addHelp _doDouble
addHelp _doString
addHelp _doOp
addHelp ->
addHelp _do
addHelp _loop
addHelp _+loop
addHelp _exit
addHelp _exitL
addHelp _exitM
addHelp _exitML
addHelp _doVocab
addHelp _doByteArray
addHelp _doShortArray
addHelp _doIntArray
addHelp _doFloatArray
addHelp _doDoubleArray
addHelp _doStringArray
addHelp _doOpArray
addHelp initString
addHelp initStringArray
addHelp _doStruct
addHelp _doStructArray
addHelp _doStructType

addHelp +	A B + ... (A+B)		add top two items
addHelp -	A B - ... (A-B)		subtract top two items
addHelp *	A B * ... (A*B) 	mutliply top two items
addHelp 2*	A 2* ... (A*2)		multiply top item by 2
addHelp 4*	A 4* ... (A*4)		multiply top item by 4
addHelp /	A B / ... (A/B)		divide top two items
addHelp 2/	A 2/ ... (A/2)		divide top item by 2
addHelp 4/	A 4/ ... (A/4)		divide top item by 4
addHelp /mod	A B /mod ... (A/B) (A mod B)	divide top two items, return quotient & remainder
addHelp mod	A B mod ... (A mod B)	take modulus of top two items
addHelp negate	A negate ... (-A)	negate top item

addHelp f+	FA FB f+ ... (FA+FB)	add top two floating point items
addHelp f-	FA FB f- ... (FA-FB)	subtract top two floating point items
addHelp f*	FA FB f* ... (FA*FB)	multiply top two floating point items
addHelp f/	FA FB f/ ... (FA/FB)	divide top two floating point items

addHelp d+	FA FB f+ ... (FA+FB)	add top two floating point items
addHelp d-	FA FB f- ... (FA-FB)	subtract top two floating point items
addHelp d*	FA FB f* ... (FA*FB)	multiply top two floating point items
addHelp d/	FA FB f/ ... (FA/FB)	divide top two floating point items

addHelp dsin
addHelp darcsin
addHelp dcos
addHelp darccos
addHelp dtan
addHelp darctan
addHelp darctan2
addHelp dexp
addHelp dln
addHelp dlog10
addHelp dpow
addHelp dsqrt
addHelp dceil
addHelp dfloor
addHelp dabs
addHelp dldexp
addHelp dfrexp
addHelp dmodf
addHelp dfmod

addHelp i2f 
addHelp i2d
addHelp f2i
addHelp f2d
addHelp d2i
addHelp d2f

addHelp call
addHelp goto
addHelp i
addHelp j
addHelp unloop
addHelp leave

addHelp or
addHelp and
addHelp xor
addHelp ~
addHelp <<
addHelp >>

addHelp not
addHelp true
addHelp false
addHelp null

addHelp ==
addHelp !=
addHelp >
addHelp >=
addHelp <
addHelp <=
addHelp 0==
addHelp 0!=
addHelp 0>
addHelp 0>=
addHelp 0<
addHelp 0<=

addHelp r<
addHelp r>
addHelp rdrop
addHelp rp
addHelp r0

addHelp dup
addHelp swap
addHelp over
addHelp rot
addHelp tuck
addHelp pick
addHelp roll
addHelp sp
addHelp s0
addHelp fp
addHelp ddup
addHelp dswap
addHelp ddrop
addHelp dover
addHelp drot

addHelp align
addHelp allot
addHelp callot
addHelp ,
addHelp c,
addHelp here
addHelp malloc
addHelp free

addHelp !
addHelp @
addHelp c!
addHelp c@
addHelp sc@
addHelp c2l
addHelp w!
addHelp w@
addHelp sw@
addHelp w2l
addHelp d!
addHelp d@
addHelp memcpy
addHelp memset
addHelp ->+
addHelp ->-
addHelp addressOf
addHelp varAction!
addHelp varAction@

addHelp strcpy
addHelp strncpy
addHelp strlen
addHelp strcat
addHelp strncat
addHelp strchr
addHelp strrchr
addHelp strcmp
addHelp stricmp
addHelp strstr
addHelp strtok

addHelp builds
addHelp newestSymbol
addHelp :
addHelp create
addHelp forget
addHelp autoforget
addHelp definitions
addHelp uses
addHelp forth
addHelp searchVocab
addHelp definitionsVocab
addHelp vocabulary
addHelp variable
addHelp constant
addHelp dconstant
addHelp enum
addHelp endenum
addHelp precedence
addHelp load
addHelp loaddone
addHelp interpret
addHelp ]
addHelp state
addHelp \'
addHelp execute

addHelp .
addHelp %d
addHelp %x
addHelp %s
addHelp %c
addHelp %bl
addHelp %nl
addHelp %f
addHelp %g
addHelp "%fmt
addHelp base
addHelp decimal
addHelp hex
addHelp printDecimalSigned
addHelp printAllSigned
addHelp printAllUnsigned

addHelp outToFile
addHelp outToScreen
addHelp outToString
addHelp	outToOp
addHelp getConOutFile

addHelp fopen
addHelp fclose
addHelp fseek
addHelp fread
addHelp fwrite
addHelp fgetc
addHelp fputc
addHelp feof
addHelp ftell
addHelp stdin
addHelp stdout
addHelp stderr

addHelp dstack
addHelp drstack
addHelp vlist
addHelp system
addHelp chdir
addHelp bye
addHelp argv
addHelp argc

addHelp loadLibrary
addHelp freeLibrary
addHelp getProcAddress
addHelp callProc0
addHelp callProc1
addHelp callProc2
addHelp callProc3
addHelp callProc4
addHelp callProc5
addHelp callProc6
addHelp callProc7
addHelp callProc8

addHelp blword
addHelp word
addHelp getInBufferBase
addHelp getInBufferPointer
addHelp setInBufferPointer
addHelp getInBufferLength
addHelp fillInBuffer

addHelp turbo
addHelp stats
addHelp describe

// ops below this line have precedence
addHelp _doEnum
addHelp do
addHelp loop
addHelp +loop
addHelp if
addHelp else
addHelp endif
addHelp begin
addHelp until
addHelp while
addHelp repeat
addHelp again
addHelp case
addHelp of
addHelp endof
addHelp endcase
addHelp does
addHelp exit
addHelp ;
addHelp byte
addHelp short
addHelp int
addHelp float
addHelp double
addHelp string
addHelp op
addHelp void
addHelp arrayOf
addHelp ptrTo
addhelp struct
addHelp endstruct
addHelp sizeOf
addHelp offsetOf
addHelp recursive
addHelp [
addHelp [compile]
addHelp [\']

