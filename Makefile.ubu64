#####################################################################################
# you will need to install nasm (the netwide assembler) if you don't already have it with:
# sudo apt-get install nasm

# you may need to install readline with this command:
# sudo apt-get install libreadline6-dev libreadline6

#.PHONY:	all clean depends

MAINOBJ = ForthLinux/obj
MAINSRC = ForthLinux
LIBSRC = ForthLib
LIBOBJ = ForthLib/obj

CC = g++
ASM = /usr/bin/nasm
#GAS = as
CDEBUG = -g

DEFINES = -DLINUX -DASM_INNER_INTERPRETER -DASM_UNDERSCORE_PREFIX -DFORTH64 -DINCLUDE_TRACE
#DEFINES = -DLINUX -DNOASM_INNER_INTERPRETER -DASM_UNDERSCORE_PREFIX -DFORTH64 -DINCLUDE_TRACE

CFLAGS = -c $(CDEBUG) $(DEFINES) $(WARNING_FLAGS) -save-temps=obj -std=c++17 -m64 -fno-stack-protector
# CFLAGS = -c $(CDEBUG) $(DEFINES) $(WARNING_FLAGS) -std=c++11 -m64

WARNING_FLAGS = -Wall -Wno-format -Wno-reorder -Wno-unused-variable -Wno-sign-compare -Wno-conversion-null -Wno-pointer-arith
CPPFLAGS = $(CFLAGS) -I ForthLib

ASMFLAGS = -d ASM_INNER_INTERPRETER -d LINUX -felf64 -i $(LIBSRC)
#ASMFLAGS = -d NOASM_INNER_INTERPRETER -d LINUX -felf64 -i $(LIBSRC)

LDFLAGS = $(CFLAGS) -no-pie
LD_LIBRARIES = -L ForthLib -lforth -lm -lc -lstdc++ -ldl -lpthread -lreadline

SRCS = \
	ForthShell.cpp \
	ForthEngine.cpp \
	OuterInterpreter.cpp \
	ForthInner.cpp \
	ForthInput.cpp \
	ForthVocabulary.cpp \
	ForthBuiltinClasses.cpp \
	ForthExtension.cpp \
	ForthShowContext.cpp \
	ForthStructs.cpp \
	ForthStructCodeGenerator.cpp \
	ForthOps.cpp \
	ForthServer.cpp \
	ForthClient.cpp \
	ForthOpcodeCompiler.cpp \
	ForthBlockFileManager.cpp \
	ForthParseInfo.cpp \
	ForthPipe.cpp \
	ForthForgettable.cpp \
	ForthThread.cpp \
	ForthObjectReader.cpp \
	ForthMemoryManager.cpp \
	kbhit.cpp \
	OArray.cpp \
	ODeque.cpp \
	OList.cpp \
	OMap.cpp \
	ONumber.cpp \
	OSocket.cpp \
	OStream.cpp \
	OString.cpp \
	OSystem.cpp \
	ClassVocabulary.cpp \
	LocalVocabulary.cpp \
	DLLVocabulary.cpp \
	NativeType.cpp \
	TypesManager.cpp \
	VocabularyStack.cpp
	
	
	
ASMSRCS = InnerInterpAmd64.asm \
	AsmCore64.asm

ASMOBJS := $(patsubst %.asm,$(LIBOBJ)/%.o,$(ASMSRCS))
OBJS := $(patsubst %.cpp,$(LIBOBJ)/%.o,$(SRCS)) $(ASMOBJS)
DEPDIR = dep
DEPS := $(patsubst %.cpp,$(DEPDIR)/%.d,$(SRCS))
# XDEFS is used to pass in defines from the make command line
LIBS := -lm -lstdc++ -ldl -lpthread -no-pie

$(LIBSRC)/libforth.a:	$(OBJS)
	ar rcs $(LIBSRC)/libforth.a $(OBJS)
	
-include $(DEPS)

stuff:
	echo "DEPS=" $(DEPS)
	echo "OBJS=" $(OBJS)
	echo "SRCS=" $(SRCS)

#spoo: ForthOps.cpp
#	echo "at " $@ "   less" $< "   star" $* "   pat" $(patsubst %.cpp,%.d,$@)
	
$(DEPDIR)/%.d: %.cpp
	$(CC) -M $(CPPFLAGS) -o $(DEPDIR)/$*.d $(LIBSRC)/$*.cpp
	
#%.d: ../%.cpp
#	$(CC) -M $(CPPFLAGS) -o $*.d $<
	
#	echo "DEP at=" $@ "   less=" $< "   star=" $*

$(LIBOBJ)/%.o: $(LIBSRC)/%.cpp
	$(CC) $(CFLAGS) -o $(LIBOBJ)/$*.o $(LIBSRC)/$*.cpp
    
$(LIBOBJ)/%.o: $(LIBSRC)/%.asm
	$(ASM) $(ASMFLAGS) -o $(LIBOBJ)/$*.o $(LIBSRC)/$*.asm

$(MAINOBJ)/ForthMain.o:	$(MAINSRC)/ForthMain.cpp
	echo "* " $*
	echo "< " $<
	echo "@ " $@
	$(CC) $(CPPFLAGS) -o $(MAINOBJ)/ForthMain.o $(MAINSRC)/ForthMain.cpp

forth:	$(MAINOBJ)/ForthMain.o $(LIBSRC)/libforth.a
	$(CC) $(MAINOBJ)/ForthMain.o $(DEFINES) -o forth -I ForthLib $(LD_LIBRARIES) -no-pie
	cp forth Sandbox

logger: $(MAINSRC)/ForthLogger.cpp
	$(CC) $(MAINSRC)/ForthLogger.cpp -o logger

clean:
	-rm $(MAINOBJ)/*.o
	-rm $(DEPDIR)/*.d
	-rm $(LIBOBJ)/*.o
	-rm $(LIBSRC)/libforth.a
	-rm ./forth
    
#all:	forth $(LIBSRC)/libforth.a
all:	forth

